{
    "docs": [
        {
            "location": "/", 
            "text": "The platform for building the future.\n\n\ncloud.gov.au is a place to run web apps, freeing up teams to focus on writing code that meets user needs. It provides a faster, safer, standard way to change web apps without impacting the user. It also provides real-time visibility and insight into web app usage, performance, and behaviour.\n\n\nCombined, \nthis makes it easy for government to release, monitor and grow user-facing digital services.\n\n\nIndustry standard technology, best-practice approach\n\n\ncloud.gov.au is built with the industry leading Platform as a Service (PaaS) technology \nCloud Foundry\n, running on top of \nAmazon Web Services\n in the Sydney region.\n\n\nTo help teams release changes faster and more safely, all changes to production are done through a fully automated Continuous Delivery pipeline:\n\n\n\n\nMyth: Organisations must choose between speed and reliability.\n\n\nFact: High-performing IT organizations deploy 30x more frequently, with 200x shorter lead times; they have 60x fewer failures and recover 168x faster.\n\n\n\u2013 \n2015 State of DevOps report\n\n\n\n\nSecure and scalable\n\n\nAWS is IRAP certified by accredited by the Australian Signals Directorate up to Unclassified DLM, and are listed on the ASD \nCertified Cloud Services List (CCSL)\n.\n\n\nASD provide \nextensive written advice\n about using public cloud infrastructure.\n\n\nThe cloud.gov.au team follow \nAWS best practices for DDoS resilency\n.\n\n\nFound out more about \nrisks, myths, and misconceptions\n about using IaaS providers like AWS in government.\n\n\nStart on cloud.gov.au today\n\n\nCheck out \nhow to request access\n.", 
            "title": "Home"
        }, 
        {
            "location": "/#the-platform-for-building-the-future", 
            "text": "cloud.gov.au is a place to run web apps, freeing up teams to focus on writing code that meets user needs. It provides a faster, safer, standard way to change web apps without impacting the user. It also provides real-time visibility and insight into web app usage, performance, and behaviour.  Combined,  this makes it easy for government to release, monitor and grow user-facing digital services.", 
            "title": "The platform for building the future."
        }, 
        {
            "location": "/#industry-standard-technology-best-practice-approach", 
            "text": "cloud.gov.au is built with the industry leading Platform as a Service (PaaS) technology  Cloud Foundry , running on top of  Amazon Web Services  in the Sydney region.  To help teams release changes faster and more safely, all changes to production are done through a fully automated Continuous Delivery pipeline:   Myth: Organisations must choose between speed and reliability.  Fact: High-performing IT organizations deploy 30x more frequently, with 200x shorter lead times; they have 60x fewer failures and recover 168x faster.  \u2013  2015 State of DevOps report", 
            "title": "Industry standard technology, best-practice approach"
        }, 
        {
            "location": "/#secure-and-scalable", 
            "text": "AWS is IRAP certified by accredited by the Australian Signals Directorate up to Unclassified DLM, and are listed on the ASD  Certified Cloud Services List (CCSL) .  ASD provide  extensive written advice  about using public cloud infrastructure.  The cloud.gov.au team follow  AWS best practices for DDoS resilency .  Found out more about  risks, myths, and misconceptions  about using IaaS providers like AWS in government.", 
            "title": "Secure and scalable"
        }, 
        {
            "location": "/#start-on-cloudgovau-today", 
            "text": "Check out  how to request access .", 
            "title": "Start on cloud.gov.au today"
        }, 
        {
            "location": "/usage/requesting_access/", 
            "text": "Requesting Access to cloud.gov.au\n\n\nBefore requesting access to cloud.gov.au each team member should create an account on github, if they have not already.\n\n\nIf you would like to make use of cloud.gov.au to develop your transformation's Alpha then please send an email to \nsupport@cloud.gov.au\n using the following template:\n\n\n\n\n\n\n\n\n\nG`Day cloud.gov.au team !\n\nWe are excited to be starting the Alpha of our digital transformation this week.\nCould you please setup our team so that we may make use of cloud.gov.au ?\n\nProject Name:  ____________\nSlack Channel: ____________\n\n| Name        | Position         | Email                | Mobile Number | Github Account  |\n| ----------- | ---------------- | -------------------- | ------------- | --------------- |\n| Jane Doe    | tech lead        | jane.doe@example.com | 0400 xxx xxx  | therealjane     |\n| John Doe    | Delivery Manager | john.doe@example.com | 0400 xxx xxx  | therealjohn     |\n| ...         |  ...             | ...                  | ...           | ...             |\n\n\nRegards,\n\nJane Doe\nTeam Lead\nAwesome Examplar\n\n\n\n\n\nYou should expect to hear from someone from the cloud.gov.au team within 1 working day.", 
            "title": "Requesting Access"
        }, 
        {
            "location": "/usage/requesting_access/#requesting-access-to-cloudgovau", 
            "text": "Before requesting access to cloud.gov.au each team member should create an account on github, if they have not already.  If you would like to make use of cloud.gov.au to develop your transformation's Alpha then please send an email to  support@cloud.gov.au  using the following template:     G`Day cloud.gov.au team !\n\nWe are excited to be starting the Alpha of our digital transformation this week.\nCould you please setup our team so that we may make use of cloud.gov.au ?\n\nProject Name:  ____________\nSlack Channel: ____________\n\n| Name        | Position         | Email                | Mobile Number | Github Account  |\n| ----------- | ---------------- | -------------------- | ------------- | --------------- |\n| Jane Doe    | tech lead        | jane.doe@example.com | 0400 xxx xxx  | therealjane     |\n| John Doe    | Delivery Manager | john.doe@example.com | 0400 xxx xxx  | therealjohn     |\n| ...         |  ...             | ...                  | ...           | ...             |\n\n\nRegards,\n\nJane Doe\nTeam Lead\nAwesome Examplar  You should expect to hear from someone from the cloud.gov.au team within 1 working day.", 
            "title": "Requesting Access to cloud.gov.au"
        }, 
        {
            "location": "/usage/setup/", 
            "text": "Setting your project up\n\n\nCongratulations, you should now have your cloud.gov.au accounts all setup.\n\nAll you need now is to scaffold out a codebase, activate circleci and push the code to github.\n\n\nRequirements\n\n\n\n\nA workstation (preferred Linux or OSX)\n\n\ngit\n\n\nbrowser\n\n\ncf-cli\n\n\nruby\n\n\njalpha rubygem\n\n\n\n\nThe DTO has produced a rubygem, \njalpha\n, for scaffolding out an opinionated Jekyll stack for your Alpha.\n\n\nActions\n\n\n\n\ngem install jalpha\n\n\njalpha new \nprojectname\n\n\ncd \nprojectname\n\n\nbin/setup\n\n\ngit init\n\n\ngit remote add ....\n\n\ngit add -a\n\n\ngit commit -am 'initial commit'\n\n\ngit push -u origin master\n\n\ngo to circleci in the browser and authorize with Github.\n\n\nfollow your new github repo\n\n\nadd some environment variables via the circleci UI\n\n\n\n\nCF_API\nCF_ORG\nCF_PASSWORD\nCF_SPACE\nCF_USER\nCF_BASIC_AUTH_USERNAME  [optional]\nCF_BASIC_AUTH_PASSWORD  [optional]", 
            "title": "Setup"
        }, 
        {
            "location": "/usage/setup/#setting-your-project-up", 
            "text": "Congratulations, you should now have your cloud.gov.au accounts all setup. \nAll you need now is to scaffold out a codebase, activate circleci and push the code to github.", 
            "title": "Setting your project up"
        }, 
        {
            "location": "/usage/setup/#requirements", 
            "text": "A workstation (preferred Linux or OSX)  git  browser  cf-cli  ruby  jalpha rubygem   The DTO has produced a rubygem,  jalpha , for scaffolding out an opinionated Jekyll stack for your Alpha.", 
            "title": "Requirements"
        }, 
        {
            "location": "/usage/setup/#actions", 
            "text": "gem install jalpha  jalpha new  projectname  cd  projectname  bin/setup  git init  git remote add ....  git add -a  git commit -am 'initial commit'  git push -u origin master  go to circleci in the browser and authorize with Github.  follow your new github repo  add some environment variables via the circleci UI   CF_API\nCF_ORG\nCF_PASSWORD\nCF_SPACE\nCF_USER\nCF_BASIC_AUTH_USERNAME  [optional]\nCF_BASIC_AUTH_PASSWORD  [optional]", 
            "title": "Actions"
        }, 
        {
            "location": "/usage/your_first_deploy/", 
            "text": "", 
            "title": "Your First Deploy"
        }, 
        {
            "location": "/usage/orca/", 
            "text": "ORCA - Operations Readiness Checklist of Amazement\n\n\n\n\nStatus: \nDRAFT\n  \n\nLast Updated: 5 September 2016\n\n\ncloud.gov.au is a best of breed hosting platform for applications written to the \nDigital Service Standard\n.\n\n\nThis list represents a distillation of questions and issues encountered by service delivery teams as building applications on cloud.gov.au.\n\n\nSome of these questions, like which URL or domain name your application will be hosted at, should be resolved early in the inception of your transformation project.\nOther questions should be revisited as part of the regular assessment of your project.\n\n\nMoratorium\n\n\nA \nMoratorium\n on service investment is in place to limit the fragmentation of the user experience of Australian Government services. However, investments are automatically exempt if the service delivery team can demonstrate they are applying the Digital Service Standard.\n\n\nConsult with your agency's Digital Transformation Coordinator or the Digital Transformation Office for further information.\n\n\nWhat is the URL your application will be served from?\n\n\nAssessment criteria:\n onboarding\n\nDSS Criteria:\n 4\n\n\nYour application or service will most likely have a web presence.\nYou will need to choose a URL at which your application will be hosted.\nChoosing a URL is an important decision that touches many departments, and, because of the way HTTP cookies work, has security implications.\n\n\nYou should seek advice on, and choose, a URL early in the life of your project to allow for lead times for arrangements to be made to host your application.\n\n\nWhat domain names do you need registered to host your application?\n\n\nAssessment criteria:\n onboarding\n\nDSS Criteria:\n 4\n\n\nTo use a dedicated domain, consult with your agency CIO / IT Manager / Web Manager to determine if this an appropropriate solution and to arrange for an application for a new domain to be submitted. Note that applications should be accompanied by a stated purpose outlining why a new domain, separate from an existing agency/topic domain, is required to support the initiative, and demonstrating compliance with the \ngov.au Eligibility and Allocation Policy\n. \n\n\nDue to the way SSL certificates work, each new domain name carries with it a cost to purchase and maintain an SSL certificate for the life of your project.\n\n\nAs with the choice of URL, you should decide on your domain name early in your project timeline.\n\n\nPlease contact the \nDomain Provider for your jurisdiction\n if you need any further information.\n\n\nSubdomain options\n\n\nTo use a subdomain of an existing agency/topic domain, consult with the \nRegistrant contact\n of the intended domain to determine if this an appropropriate solution and to arrange its creation in the DNS zone file.  \n\n\nIs your application built in Ruby, Python, Node, Java, or Go?\n\n\nAssessment criteria:\n onboarding\n\nDSS Criteria:\n 4\n\n\nCloud Foundry, the hosting technology that underpins cloud.gov.au, supports the following languages:\n\n\n\n\nRuby\n\n\nPython\n\n\nNode\n\n\nJava\n\n\nGo\n\n\n\n\nIf you are planning to write your application in a language that is not on this list you should discuss this with the cloud.gov.au team by sending a support request to support@cloud.gov.au.\nPlease understand that the choice of languages is limited because each supported language represents a significant investment of resources to maintain, support, and patch bugs and security issues.\nAdding a new supported language is not something taken lightly by the cloud.gov.au team as this represents an ongoing commitment for the life of all projects delivered in that language.\n\n\nDepending on your answer to this question, the following questions may be appropriate:\n\n\nIf Java, do you use SpringBoot, Play, or Grails?\n\n\nThe Java ecosystem contains many ways to write and deploy applications, not all of which are supported.\nIf your Java application will not use one of the following:\n\n\n\n\nSpringBoot\n\n\nPlay\n\n\nGrails\n\n\n\n\nBefore proceeding, you should discuss your requirements with cloud.gov.au by sending a support request to support@cloud.gov.au.\n\n\nIf Ruby, do you use Rails or Sinatra?\n\n\nThe Ruby ecosystem contains many ways to write and deploy applications, not all of which are supported.\nIf your Ruby application will not use one of the following:\n\n\n\n\nRails\n\n\nSinatra\n\n\n\n\nBefore proceeding, you should discuss your requirements with cloud.gov.au by sending a support request to support@cloud.gov.au.\n\n\nIf Python, do you use Django or Flask?\n\n\nThe Python ecosystem contains many ways to write and deploy applications, not all of which are supported.\nIf your Python application will not use one of the following:\n\n\n\n\nDjango\n\n\nFlask\n\n\n\n\nBefore proceeding, you should discuss your requirements with cloud.gov.au by sending a support request to support@cloud.gov.au.\n\n\nWhat automated software testing do you do?\n\n\nAssessment criteria:\n onboarding and continued\n\nDSS Criteria:\n 10\n\n\nAutomated testing is an important part of the Digital Service Standard.\nYou should consider how you will build automated tests for all parts of your application, what external resources you may need, including scratch or mock items like databases and message queues, and how you will populate those with test data.\n\n\nWill your application send email?\n\n\nAssessment criteria:\n onboarding and continued\n\nDSS Criteria:\n 4, 5\n\n\nSending email from a government application is complicated.\nFor example, some types of email correspondence, like account creation or password reset notifications, represent a potential security risk as the contents of email are not considered private.\n\n\nWhat address or addresses do you plan to be the \nsender\n of an email from your application?\nAll email has a sender, and recipients of the email from your system will attempt to reply to it.\nYou should consider how you will handle ad-hoc replies to automated messages.\n\n\nWill your application receive email?\n\n\nAssessment criteria:\n onboarding and continued\n\nDSS Criteria:\n 4, 5\n\n\nReceiving email is also complicated as the correspondence may need to be archived.\n\n\nDoes you application need to process incoming email?\nIf so, how much, and how long does it need to be stored?\n\n\nWhat one off or recurring tasks does your application need to run?\n\n\nAssessment criteria:\n onboarding and continued\n\nDSS Criteria:\n 4\n\n\nWill your application need to run recurrent or batch jobs?\nThese might be one off tasks to perform a database migration, or periodic tasks.\n\n\nIf yes, how will you monitor these tasks' status?\n\n\nWho will have access to your application during its private beta phase?\n\n\nAssessment criteria:\n onboarding and continued\n\nDSS Criteria:\n 4, 9, 10\n\n\nWhen building a digital service it is common to do a beta release to a limited number of beta users.\n\n\n\n\nWho will have access to your application during your private beta?\n\n\nHow will you grant them access?\n\n\nHow will you implement this access?\n\n\nHow will you revoke their access if they are removed from the beta program?\n\n\nHow will you audit the use of your application while in private beta?\n\n\n\n\nWho will have access to your application during its public beta phase?\n\n\nAssessment criteria:\n onboarding and continued\n\nDSS Criteria:\n 4, 9, 10\n\n\nWhen building a digital service it is common to move from a private beta phase to a limited public beta.\n\n\n\n\nIf you plan to restrict access to your application during your public beta, who should have access to your application?\n\n\nHow will you grant them access?\n\n\nHow will you implement this access?\n\n\nHow will you revoke their access if they are removed from the beta program?\n\n\nDo you need to audit the use of your application while in public beta, and if so now?\n\n\n\n\nHow are users authenticated?\n\n\nAssessment criteria:\n onboarding and continued\n\nDSS Criteria:\n 4, 5\n\n\nAuthentication is a critical element of the security of your application.\n\n\nDo you plan to implement multi factor authentication?\n\n\nMulti factor authentication, sometimes called two factor authentication, is an additional security measure above traditional usernames and passwords by combining something you know (username, password), with something you have (usually a one time code)\n\n\nDepending on the security requirements of your application you may need to consider implementing multi factor authentication for some or all of the actions that require authorisation.\n\n\nHow many users will be using this service at peak?\n\n\nAssessment criteria:\n onboarding and continued\n\nDSS Criteria:\n 4, 10, 11\n\n\nHaving a firm estimate of the number of concurrent users is crucial to designing your application to perform well under peak loads and to ensure sufficient resources are available to meet peak demand.\n\n\n\n\nHow many users do you expect to use your service?\n\n\nWhat is the peak number of users do you expect to use your service at one time?\n\n\n\n\nWhat is the maximum number of requests per second to your web tier do you expect to receive?\n\n\nAssessment criteria:\n onboarding and continued\n\nDSS Criteria:\n 4, 10, 11\n\n\nMost applications will generate many HTTP requests per user action.\n\n\n\n\nHow many HTTP requests per second do you expect your application to receive?\n\n\nIf you application provides an API, how will you rate limit aggressive clients of your service?\n\n\nWhat is the maximum acceptable processing time for a HTTP request?\n\n\nDo some requests take longer than others? If so, how will you identify them?\n\n\n\n\nIs your data classified at UNCLASSIFIED or PROTECTED?\n\n\nAssessment criteria:\n onboarding and continued\n\nDSS Criteria:\n 5\n\n\ncloud.gov.au is able to handle data classified at UNCLASSIFIED level.\nIf your application will handle PROTECTED data this will require provisioning of resources in a data center with a higher security rating.\nThis process has a long lead time.\n\n\nBefore proceeding, you should discuss your requirements with cloud.gov.au by sending a support request to support@cloud.gov.au.\n\n\nHow do you log what users accessed what resources?\n\n\nAssessment criteria:\n onboarding and continued\n\nDSS Criteria:\n 5\n\n\nIf you application contains resources that are protected, you should record who accessed what, and when, for audit purposes.\nYou may be required to archive these audit logs.\n\n\nWhat external systems are you interfacing with?\n\n\nAssessment criteria:\n onboarding and continued\n\nDSS Criteria:\n 4\n\n\nIf your application relies on other systems to deliver its service, what are they and how are they accessed?\nComponents like databases and message queues deployed specifically for your application are usually excluded from this list.\n\n\nHow will you communicate the availability of those external systems to your users?\n\n\nIf an external system that your application needs to perform its work is performing slowly or is unavailable, how will you inform your users of this?\n\n\nDo these external systems require credentials?\n\n\nIf those external systems require credentials or other security tokens for authentication, how will those credentials be protected and managed by your application?\n\n\nDo you use MySQL or PostgreSQL for your database?\n\n\nAssessment criteria:\n onboarding and continued\n\nDSS Criteria:\n 4\n\n\ncloud.gov.au supports the following databases:\n\n\n\n\nMySQL\n\n\nPostgresSQL\n\n\n\n\nIf you are planning to use a database that is not on this list you should discuss this with the cloud.gov.au team by sending a support request to support@cloud.gov.au.\n\n\nHow much data do you plan to store in your database?\n\n\nDo you use RabbitMQ for queuing?\n\n\nAssessment criteria:\n onboarding and continued\n\nDSS Criteria:\n 4\n\n\ncloud.gov.au supports the following message queues:\n\n\n\n\nRabbitMQ\n\n\n\n\nIf you are planning to use a message queue that is not on this list you should discuss this with the cloud.gov.au team by sending a support request to support@cloud.gov.au.\n\n\nHow much data do you plan to store in your queue?\n\n\nDo you use memcache or Redis for caching?\n\n\nAssessment criteria:\n onboarding and continued\n\nDSS Criteria:\n 4\n\n\ncloud.gov.au supports the following caching products:\n\n\n\n\nmemcache\n\n\nRedis\n\n\n\n\nIf you are planning to use a cache that is not on this list you should discuss this with the cloud.gov.au team by sending a support request to support@cloud.gov.au.\n\n\nHow much data do you plan to store in your cache?\n\n\nAre users able to upload files? Where will you store them?\n\n\nAssessment criteria:\n onboarding and continued\n\nDSS Criteria:\n 4\n\n\nIf your application allows users to upload files, where do you plan to store this data, and how much of it will there be?\n\n\nWhat is the uptime requirement of your application?\n\n\nAssessment criteria:\n onboarding and continued\n\nDSS Criteria:\n 4\n\n\nWhat is the uptime requirement for your application?\n\n\nWhat failure conditions in your application are considered an outage?\n\n\nAssessment criteria:\n onboarding and continued\n\nDSS Criteria:\n 4\n\n\nApplications should be written to degrade gracefully under load or when a failure occurs.\n\n\n\n\nWhat failure conditions can your application handle without intervention?\n\n\nWhat failure conditions can your application handle by temporarily disabling a feature or function?\n\n\nWhat failure conditions in your application will require someone to be notified to fix it?\n\n\n\n\nHow will you continue to provide your service during an outage?\n\n\nAssessment criteria:\n onboarding and continued\n\nDSS Criteria:\n 10\n\n\nDepending on the length of your outage, unplanned or otherwise, you may have to revert to an alternative or manual process.\nHow will that work?\n\n\nHow will you communicate availability status to your users?\n\n\nAssessment criteria:\n onboarding and continued\n\nDSS Criteria:\n 3, 4\n\n\nMost services experience some level of downtime, either scheduled or unplanned.\nHow will you communicate scheduled or unplanned downtime to your users?\n\n\nHow will your users contact you for support?\n\n\nAssessment criteria:\n onboarding and continued\n\nDSS Criteria:\n 3\n\n\nIf you users need to contact you with a support request, how will they do so?\n\n\nHow will your users provide feedback to you for your application?\n\n\nAssessment criteria:\n onboarding and continued\n\nDSS Criteria:\n 3\n\n\nIf you users wish to provide you with feedback, how will they do so?\n\n\nWhere is your source code hosted?\n\n\nAssessment criteria:\n onboarding and continued\n\nDSS Criteria:\n 8\n\n\nWill the source code to your application be publicly available under an appropriate Open Source licence.\nIf not, where do you plan to host your source code?", 
            "title": "Getting your app ready for launch"
        }, 
        {
            "location": "/usage/orca/#orca-operations-readiness-checklist-of-amazement", 
            "text": "Status:  DRAFT    \nLast Updated: 5 September 2016  cloud.gov.au is a best of breed hosting platform for applications written to the  Digital Service Standard .  This list represents a distillation of questions and issues encountered by service delivery teams as building applications on cloud.gov.au.  Some of these questions, like which URL or domain name your application will be hosted at, should be resolved early in the inception of your transformation project.\nOther questions should be revisited as part of the regular assessment of your project.", 
            "title": "ORCA - Operations Readiness Checklist of Amazement"
        }, 
        {
            "location": "/usage/orca/#moratorium", 
            "text": "A  Moratorium  on service investment is in place to limit the fragmentation of the user experience of Australian Government services. However, investments are automatically exempt if the service delivery team can demonstrate they are applying the Digital Service Standard.  Consult with your agency's Digital Transformation Coordinator or the Digital Transformation Office for further information.", 
            "title": "Moratorium"
        }, 
        {
            "location": "/usage/orca/#what-is-the-url-your-application-will-be-served-from", 
            "text": "Assessment criteria:  onboarding DSS Criteria:  4  Your application or service will most likely have a web presence.\nYou will need to choose a URL at which your application will be hosted.\nChoosing a URL is an important decision that touches many departments, and, because of the way HTTP cookies work, has security implications.  You should seek advice on, and choose, a URL early in the life of your project to allow for lead times for arrangements to be made to host your application.", 
            "title": "What is the URL your application will be served from?"
        }, 
        {
            "location": "/usage/orca/#what-domain-names-do-you-need-registered-to-host-your-application", 
            "text": "Assessment criteria:  onboarding DSS Criteria:  4  To use a dedicated domain, consult with your agency CIO / IT Manager / Web Manager to determine if this an appropropriate solution and to arrange for an application for a new domain to be submitted. Note that applications should be accompanied by a stated purpose outlining why a new domain, separate from an existing agency/topic domain, is required to support the initiative, and demonstrating compliance with the  gov.au Eligibility and Allocation Policy .   Due to the way SSL certificates work, each new domain name carries with it a cost to purchase and maintain an SSL certificate for the life of your project.  As with the choice of URL, you should decide on your domain name early in your project timeline.  Please contact the  Domain Provider for your jurisdiction  if you need any further information.", 
            "title": "What domain names do you need registered to host your application?"
        }, 
        {
            "location": "/usage/orca/#subdomain-options", 
            "text": "To use a subdomain of an existing agency/topic domain, consult with the  Registrant contact  of the intended domain to determine if this an appropropriate solution and to arrange its creation in the DNS zone file.", 
            "title": "Subdomain options"
        }, 
        {
            "location": "/usage/orca/#is-your-application-built-in-ruby-python-node-java-or-go", 
            "text": "Assessment criteria:  onboarding DSS Criteria:  4  Cloud Foundry, the hosting technology that underpins cloud.gov.au, supports the following languages:   Ruby  Python  Node  Java  Go   If you are planning to write your application in a language that is not on this list you should discuss this with the cloud.gov.au team by sending a support request to support@cloud.gov.au.\nPlease understand that the choice of languages is limited because each supported language represents a significant investment of resources to maintain, support, and patch bugs and security issues.\nAdding a new supported language is not something taken lightly by the cloud.gov.au team as this represents an ongoing commitment for the life of all projects delivered in that language.  Depending on your answer to this question, the following questions may be appropriate:", 
            "title": "Is your application built in Ruby, Python, Node, Java, or Go?"
        }, 
        {
            "location": "/usage/orca/#if-java-do-you-use-springboot-play-or-grails", 
            "text": "The Java ecosystem contains many ways to write and deploy applications, not all of which are supported.\nIf your Java application will not use one of the following:   SpringBoot  Play  Grails   Before proceeding, you should discuss your requirements with cloud.gov.au by sending a support request to support@cloud.gov.au.", 
            "title": "If Java, do you use SpringBoot, Play, or Grails?"
        }, 
        {
            "location": "/usage/orca/#if-ruby-do-you-use-rails-or-sinatra", 
            "text": "The Ruby ecosystem contains many ways to write and deploy applications, not all of which are supported.\nIf your Ruby application will not use one of the following:   Rails  Sinatra   Before proceeding, you should discuss your requirements with cloud.gov.au by sending a support request to support@cloud.gov.au.", 
            "title": "If Ruby, do you use Rails or Sinatra?"
        }, 
        {
            "location": "/usage/orca/#if-python-do-you-use-django-or-flask", 
            "text": "The Python ecosystem contains many ways to write and deploy applications, not all of which are supported.\nIf your Python application will not use one of the following:   Django  Flask   Before proceeding, you should discuss your requirements with cloud.gov.au by sending a support request to support@cloud.gov.au.", 
            "title": "If Python, do you use Django or Flask?"
        }, 
        {
            "location": "/usage/orca/#what-automated-software-testing-do-you-do", 
            "text": "Assessment criteria:  onboarding and continued DSS Criteria:  10  Automated testing is an important part of the Digital Service Standard.\nYou should consider how you will build automated tests for all parts of your application, what external resources you may need, including scratch or mock items like databases and message queues, and how you will populate those with test data.", 
            "title": "What automated software testing do you do?"
        }, 
        {
            "location": "/usage/orca/#will-your-application-send-email", 
            "text": "Assessment criteria:  onboarding and continued DSS Criteria:  4, 5  Sending email from a government application is complicated.\nFor example, some types of email correspondence, like account creation or password reset notifications, represent a potential security risk as the contents of email are not considered private.  What address or addresses do you plan to be the  sender  of an email from your application?\nAll email has a sender, and recipients of the email from your system will attempt to reply to it.\nYou should consider how you will handle ad-hoc replies to automated messages.", 
            "title": "Will your application send email?"
        }, 
        {
            "location": "/usage/orca/#will-your-application-receive-email", 
            "text": "Assessment criteria:  onboarding and continued DSS Criteria:  4, 5  Receiving email is also complicated as the correspondence may need to be archived.  Does you application need to process incoming email?\nIf so, how much, and how long does it need to be stored?", 
            "title": "Will your application receive email?"
        }, 
        {
            "location": "/usage/orca/#what-one-off-or-recurring-tasks-does-your-application-need-to-run", 
            "text": "Assessment criteria:  onboarding and continued DSS Criteria:  4  Will your application need to run recurrent or batch jobs?\nThese might be one off tasks to perform a database migration, or periodic tasks.  If yes, how will you monitor these tasks' status?", 
            "title": "What one off or recurring tasks does your application need to run?"
        }, 
        {
            "location": "/usage/orca/#who-will-have-access-to-your-application-during-its-private-beta-phase", 
            "text": "Assessment criteria:  onboarding and continued DSS Criteria:  4, 9, 10  When building a digital service it is common to do a beta release to a limited number of beta users.   Who will have access to your application during your private beta?  How will you grant them access?  How will you implement this access?  How will you revoke their access if they are removed from the beta program?  How will you audit the use of your application while in private beta?", 
            "title": "Who will have access to your application during its private beta phase?"
        }, 
        {
            "location": "/usage/orca/#who-will-have-access-to-your-application-during-its-public-beta-phase", 
            "text": "Assessment criteria:  onboarding and continued DSS Criteria:  4, 9, 10  When building a digital service it is common to move from a private beta phase to a limited public beta.   If you plan to restrict access to your application during your public beta, who should have access to your application?  How will you grant them access?  How will you implement this access?  How will you revoke their access if they are removed from the beta program?  Do you need to audit the use of your application while in public beta, and if so now?", 
            "title": "Who will have access to your application during its public beta phase?"
        }, 
        {
            "location": "/usage/orca/#how-are-users-authenticated", 
            "text": "Assessment criteria:  onboarding and continued DSS Criteria:  4, 5  Authentication is a critical element of the security of your application.", 
            "title": "How are users authenticated?"
        }, 
        {
            "location": "/usage/orca/#do-you-plan-to-implement-multi-factor-authentication", 
            "text": "Multi factor authentication, sometimes called two factor authentication, is an additional security measure above traditional usernames and passwords by combining something you know (username, password), with something you have (usually a one time code)  Depending on the security requirements of your application you may need to consider implementing multi factor authentication for some or all of the actions that require authorisation.", 
            "title": "Do you plan to implement multi factor authentication?"
        }, 
        {
            "location": "/usage/orca/#how-many-users-will-be-using-this-service-at-peak", 
            "text": "Assessment criteria:  onboarding and continued DSS Criteria:  4, 10, 11  Having a firm estimate of the number of concurrent users is crucial to designing your application to perform well under peak loads and to ensure sufficient resources are available to meet peak demand.   How many users do you expect to use your service?  What is the peak number of users do you expect to use your service at one time?", 
            "title": "How many users will be using this service at peak?"
        }, 
        {
            "location": "/usage/orca/#what-is-the-maximum-number-of-requests-per-second-to-your-web-tier-do-you-expect-to-receive", 
            "text": "Assessment criteria:  onboarding and continued DSS Criteria:  4, 10, 11  Most applications will generate many HTTP requests per user action.   How many HTTP requests per second do you expect your application to receive?  If you application provides an API, how will you rate limit aggressive clients of your service?  What is the maximum acceptable processing time for a HTTP request?  Do some requests take longer than others? If so, how will you identify them?", 
            "title": "What is the maximum number of requests per second to your web tier do you expect to receive?"
        }, 
        {
            "location": "/usage/orca/#is-your-data-classified-at-unclassified-or-protected", 
            "text": "Assessment criteria:  onboarding and continued DSS Criteria:  5  cloud.gov.au is able to handle data classified at UNCLASSIFIED level.\nIf your application will handle PROTECTED data this will require provisioning of resources in a data center with a higher security rating.\nThis process has a long lead time.  Before proceeding, you should discuss your requirements with cloud.gov.au by sending a support request to support@cloud.gov.au.", 
            "title": "Is your data classified at UNCLASSIFIED or PROTECTED?"
        }, 
        {
            "location": "/usage/orca/#how-do-you-log-what-users-accessed-what-resources", 
            "text": "Assessment criteria:  onboarding and continued DSS Criteria:  5  If you application contains resources that are protected, you should record who accessed what, and when, for audit purposes.\nYou may be required to archive these audit logs.", 
            "title": "How do you log what users accessed what resources?"
        }, 
        {
            "location": "/usage/orca/#what-external-systems-are-you-interfacing-with", 
            "text": "Assessment criteria:  onboarding and continued DSS Criteria:  4  If your application relies on other systems to deliver its service, what are they and how are they accessed?\nComponents like databases and message queues deployed specifically for your application are usually excluded from this list.", 
            "title": "What external systems are you interfacing with?"
        }, 
        {
            "location": "/usage/orca/#how-will-you-communicate-the-availability-of-those-external-systems-to-your-users", 
            "text": "If an external system that your application needs to perform its work is performing slowly or is unavailable, how will you inform your users of this?", 
            "title": "How will you communicate the availability of those external systems to your users?"
        }, 
        {
            "location": "/usage/orca/#do-these-external-systems-require-credentials", 
            "text": "If those external systems require credentials or other security tokens for authentication, how will those credentials be protected and managed by your application?", 
            "title": "Do these external systems require credentials?"
        }, 
        {
            "location": "/usage/orca/#do-you-use-mysql-or-postgresql-for-your-database", 
            "text": "Assessment criteria:  onboarding and continued DSS Criteria:  4  cloud.gov.au supports the following databases:   MySQL  PostgresSQL   If you are planning to use a database that is not on this list you should discuss this with the cloud.gov.au team by sending a support request to support@cloud.gov.au.", 
            "title": "Do you use MySQL or PostgreSQL for your database?"
        }, 
        {
            "location": "/usage/orca/#how-much-data-do-you-plan-to-store-in-your-database", 
            "text": "", 
            "title": "How much data do you plan to store in your database?"
        }, 
        {
            "location": "/usage/orca/#do-you-use-rabbitmq-for-queuing", 
            "text": "Assessment criteria:  onboarding and continued DSS Criteria:  4  cloud.gov.au supports the following message queues:   RabbitMQ   If you are planning to use a message queue that is not on this list you should discuss this with the cloud.gov.au team by sending a support request to support@cloud.gov.au.", 
            "title": "Do you use RabbitMQ for queuing?"
        }, 
        {
            "location": "/usage/orca/#how-much-data-do-you-plan-to-store-in-your-queue", 
            "text": "", 
            "title": "How much data do you plan to store in your queue?"
        }, 
        {
            "location": "/usage/orca/#do-you-use-memcache-or-redis-for-caching", 
            "text": "Assessment criteria:  onboarding and continued DSS Criteria:  4  cloud.gov.au supports the following caching products:   memcache  Redis   If you are planning to use a cache that is not on this list you should discuss this with the cloud.gov.au team by sending a support request to support@cloud.gov.au.", 
            "title": "Do you use memcache or Redis for caching?"
        }, 
        {
            "location": "/usage/orca/#how-much-data-do-you-plan-to-store-in-your-cache", 
            "text": "", 
            "title": "How much data do you plan to store in your cache?"
        }, 
        {
            "location": "/usage/orca/#are-users-able-to-upload-files-where-will-you-store-them", 
            "text": "Assessment criteria:  onboarding and continued DSS Criteria:  4  If your application allows users to upload files, where do you plan to store this data, and how much of it will there be?", 
            "title": "Are users able to upload files? Where will you store them?"
        }, 
        {
            "location": "/usage/orca/#what-is-the-uptime-requirement-of-your-application", 
            "text": "Assessment criteria:  onboarding and continued DSS Criteria:  4  What is the uptime requirement for your application?", 
            "title": "What is the uptime requirement of your application?"
        }, 
        {
            "location": "/usage/orca/#what-failure-conditions-in-your-application-are-considered-an-outage", 
            "text": "Assessment criteria:  onboarding and continued DSS Criteria:  4  Applications should be written to degrade gracefully under load or when a failure occurs.   What failure conditions can your application handle without intervention?  What failure conditions can your application handle by temporarily disabling a feature or function?  What failure conditions in your application will require someone to be notified to fix it?", 
            "title": "What failure conditions in your application are considered an outage?"
        }, 
        {
            "location": "/usage/orca/#how-will-you-continue-to-provide-your-service-during-an-outage", 
            "text": "Assessment criteria:  onboarding and continued DSS Criteria:  10  Depending on the length of your outage, unplanned or otherwise, you may have to revert to an alternative or manual process.\nHow will that work?", 
            "title": "How will you continue to provide your service during an outage?"
        }, 
        {
            "location": "/usage/orca/#how-will-you-communicate-availability-status-to-your-users", 
            "text": "Assessment criteria:  onboarding and continued DSS Criteria:  3, 4  Most services experience some level of downtime, either scheduled or unplanned.\nHow will you communicate scheduled or unplanned downtime to your users?", 
            "title": "How will you communicate availability status to your users?"
        }, 
        {
            "location": "/usage/orca/#how-will-your-users-contact-you-for-support", 
            "text": "Assessment criteria:  onboarding and continued DSS Criteria:  3  If you users need to contact you with a support request, how will they do so?", 
            "title": "How will your users contact you for support?"
        }, 
        {
            "location": "/usage/orca/#how-will-your-users-provide-feedback-to-you-for-your-application", 
            "text": "Assessment criteria:  onboarding and continued DSS Criteria:  3  If you users wish to provide you with feedback, how will they do so?", 
            "title": "How will your users provide feedback to you for your application?"
        }, 
        {
            "location": "/usage/orca/#where-is-your-source-code-hosted", 
            "text": "Assessment criteria:  onboarding and continued DSS Criteria:  8  Will the source code to your application be publicly available under an appropriate Open Source licence.\nIf not, where do you plan to host your source code?", 
            "title": "Where is your source code hosted?"
        }, 
        {
            "location": "/usage/cfcli/", 
            "text": "Driving the DTO Platform from the command line\n\n\nThis article is intended for developers new to the DTO Platform, herin called 'The Platform', built with Pivotal Cloud Foundry. We will walk through the typical steps to deploy an application. You will learn how to use the cf command line tool to interact with The Platform.\n\n\nPrerequisites\n\n\nThis tutorial assumes that you have already been sent your account details for The Platform and you have a copy of the demo application cloned locally.\n\n\ngit clone git@github.com:AusDTO/pcf_demo_app.git", 
            "title": "Intro"
        }, 
        {
            "location": "/usage/cfcli/#driving-the-dto-platform-from-the-command-line", 
            "text": "This article is intended for developers new to the DTO Platform, herin called 'The Platform', built with Pivotal Cloud Foundry. We will walk through the typical steps to deploy an application. You will learn how to use the cf command line tool to interact with The Platform.", 
            "title": "Driving the DTO Platform from the command line"
        }, 
        {
            "location": "/usage/cfcli/#prerequisites", 
            "text": "This tutorial assumes that you have already been sent your account details for The Platform and you have a copy of the demo application cloned locally.  git clone git@github.com:AusDTO/pcf_demo_app.git", 
            "title": "Prerequisites"
        }, 
        {
            "location": "/usage/cfcli/install/", 
            "text": "Installing PCF cli tool\n\n\nYou will need to have installed the Cloud Foundry CLI tools before continuing.\n\n\n\n\n\n\n\n\nOS\n\n\n32 BIT\n\n\n64 BIT\n\n\n\n\n\n\n\n\n\n\nWindows\n\n\n6.21.1\n\n\n6.21.1\n\n\n\n\n\n\nLinux (deb)\n\n\n6.21.1\n\n\n6.21.1\n\n\n\n\n\n\nLinux (rpm)\n\n\n6.21.1\n\n\n6.21.1\n\n\n\n\n\n\nMac OSX\n\n\nna\n\n\n6.21.1", 
            "title": "Install"
        }, 
        {
            "location": "/usage/cfcli/install/#installing-pcf-cli-tool", 
            "text": "You will need to have installed the Cloud Foundry CLI tools before continuing.     OS  32 BIT  64 BIT      Windows  6.21.1  6.21.1    Linux (deb)  6.21.1  6.21.1    Linux (rpm)  6.21.1  6.21.1    Mac OSX  na  6.21.1", 
            "title": "Installing PCF cli tool"
        }, 
        {
            "location": "/usage/cfcli/login/", 
            "text": "Platform Login\n\n\nBefore working with The Platform you need to instruct the cf cli what platform API endpoint, organisation \n space to work with and what your credentials are. If you only belong to one ORG and/or space then these will be auto-selected for you.\n\n\n[~/src/github.com/AusDTO/ops/sekrets]\nlunix@boran]  (master) -\n cf login -a https://api.system.staging.digital.gov.au --skip-ssl-validation\nAPI endpoint: https://api.system.staging.digital.gov.au\n\nEmail\n example.person@digital.gov.au\n\nPassword\n\nAuthenticating...\nOK\n\nTargeted org dto\n\nTargeted space dtoweb\n\n\nAPI endpoint:   https://api.system.staging.digital.gov.au (API version: 2.43.0)\nUser:           example.person@digital.gov.au\nOrg:            dto\nSpace:          dtoweb\n\n\n\n\nYou should now be logged in and ready.", 
            "title": "Login"
        }, 
        {
            "location": "/usage/cfcli/login/#platform-login", 
            "text": "Before working with The Platform you need to instruct the cf cli what platform API endpoint, organisation   space to work with and what your credentials are. If you only belong to one ORG and/or space then these will be auto-selected for you.  [~/src/github.com/AusDTO/ops/sekrets]\nlunix@boran]  (master) -  cf login -a https://api.system.staging.digital.gov.au --skip-ssl-validation\nAPI endpoint: https://api.system.staging.digital.gov.au\n\nEmail  example.person@digital.gov.au\n\nPassword \nAuthenticating...\nOK\n\nTargeted org dto\n\nTargeted space dtoweb\n\n\nAPI endpoint:   https://api.system.staging.digital.gov.au (API version: 2.43.0)\nUser:           example.person@digital.gov.au\nOrg:            dto\nSpace:          dtoweb  You should now be logged in and ready.", 
            "title": "Platform Login"
        }, 
        {
            "location": "/usage/cfcli/application_deployment/", 
            "text": "Application Deployment\n\n\nTo get a list of existing apps depoloyed in the curent space run \ncf apps\n.\n\n\nThe command used for deploying a new app, or for updating an existing app, is \ncf push ...\n\n\nThere is a fair amount of options available to the \ncf push\n command. To see them all run \ncf push --help\n\n\nLet's push our demo application now to the platform.\n\n\n[~/src/github.com/AusDTO/pcf_demo_app]\nlunix@boran]  (master) -\n cf push mydemoapp -b staticfile_buildpack -n mydemoapp -i 1 -m 64M -k 256M\n...\n...\n\n\n\n\nThere is a bit going on here. Lets run throught what the options are:\n\n\n-b\n :specifiy what buildpack to use to configure the Application Instance\n\n\n-n\n :sets the subdomain under which our application will be available\n\n\n-i\n :sets how many instances are required to serve our application\n\n\n-m\n :sets the maximum RAM usage for our application (e.g. 256M, 1024M, 1G)\n\n\n-k\n :sets the maximum DISK usage for our application (e.g. 256M, 1024M, 1G)  \n\n\nLets see this in action.\n\n\n[~/src/github.com/AusDTO/pcf_demo_app]\nlunix@boran]  (master) -\n cf push mydemoapp -b staticfile_buildpack -n mydemoapp -i 1 -m 64M -k 256M\nCreating app mydemoapp in org dto / space dtoweb as example.person@digital.gov.au...\nOK\n\nCreating route mydemoapp.apps.staging.digital.gov.au...\nOK\n\nBinding mydemoapp.apps.staging.digital.gov.au to mydemoapp...\nOK\n\nUploading mydemoapp...\nUploading app files from: /home/lunix/src/github.com/AusDTO/pcf_demo_app\nUploading 550B, 2 files\nDone uploading\nOK\n\nStarting app mydemoapp in org dto / space dtoweb as example.person@digital.gov.au...\nCreating container\nSuccessfully created container\nDownloading app package...\nDownloaded app package (518B)\nDownloading buildpacks (staticfile_buildpack)...\nDownloading staticfile_buildpack...\nDownloaded staticfile_buildpack\nDownloaded buildpacks\nStaging...\n-------\n Buildpack version 1.2.2\nDownloaded [file:///tmp/buildpacks/59f767b9bf9c7cde279cb3b56367792c/dependencies/https___s3.amazonaws.com_pivotal-buildpacks_nginx_cflinuxfs2_nginx-1.8.0-linux-x64.tgz]\ngrep: Staticfile: No such file or directory\n-----\n Using root folder\n-----\n Copying project files into public/\n-----\n Setting up nginx\ngrep: Staticfile: No such file or directory\nExit status 0\nStaging complete\nUploading droplet, build artifacts cache...\nUploading droplet...\nUploading build artifacts cache...\nUploaded build artifacts cache (131B)\nUploaded droplet (2.4M)\nUploading complete\n\n1 of 1 instances running\n\nApp started\n\n\nOK\n\nApp mydemoapp was started using this command `sh boot.sh`\n\nShowing health and status for app mydemoapp in org dto / space dtoweb as example.person@digital.gov.au...\nOK\n\nrequested state: started\ninstances: 1/1\nusage: 64M x 1 instances\nurls: mydemoapp.apps.staging.digital.gov.au\nlast uploaded: Mon Feb 15 01:46:56 UTC 2016\nstack: cflinuxfs2\nbuildpack: staticfile_buildpack\n\n     state     since                    cpu    memory        disk            details\n#0   running   2016-02-15 12:47:36 PM   0.0%   3.3M of 64M   33.7M of 256M\n\n[~/src/github.com/AusDTO/pcf_demo_app]\nlunix@boran]  (master) -\n\n\n\n\n\nWith just a single command you should now have your application running on the DTO Platform at \nhttp://mydemoapp.apps.staging.digital.gov.au", 
            "title": "Application Deployment"
        }, 
        {
            "location": "/usage/cfcli/application_deployment/#application-deployment", 
            "text": "To get a list of existing apps depoloyed in the curent space run  cf apps .  The command used for deploying a new app, or for updating an existing app, is  cf push ...  There is a fair amount of options available to the  cf push  command. To see them all run  cf push --help  Let's push our demo application now to the platform.  [~/src/github.com/AusDTO/pcf_demo_app]\nlunix@boran]  (master) -  cf push mydemoapp -b staticfile_buildpack -n mydemoapp -i 1 -m 64M -k 256M\n...\n...  There is a bit going on here. Lets run throught what the options are:  -b  :specifiy what buildpack to use to configure the Application Instance  -n  :sets the subdomain under which our application will be available  -i  :sets how many instances are required to serve our application  -m  :sets the maximum RAM usage for our application (e.g. 256M, 1024M, 1G)  -k  :sets the maximum DISK usage for our application (e.g. 256M, 1024M, 1G)    Lets see this in action.  [~/src/github.com/AusDTO/pcf_demo_app]\nlunix@boran]  (master) -  cf push mydemoapp -b staticfile_buildpack -n mydemoapp -i 1 -m 64M -k 256M\nCreating app mydemoapp in org dto / space dtoweb as example.person@digital.gov.au...\nOK\n\nCreating route mydemoapp.apps.staging.digital.gov.au...\nOK\n\nBinding mydemoapp.apps.staging.digital.gov.au to mydemoapp...\nOK\n\nUploading mydemoapp...\nUploading app files from: /home/lunix/src/github.com/AusDTO/pcf_demo_app\nUploading 550B, 2 files\nDone uploading\nOK\n\nStarting app mydemoapp in org dto / space dtoweb as example.person@digital.gov.au...\nCreating container\nSuccessfully created container\nDownloading app package...\nDownloaded app package (518B)\nDownloading buildpacks (staticfile_buildpack)...\nDownloading staticfile_buildpack...\nDownloaded staticfile_buildpack\nDownloaded buildpacks\nStaging...\n-------  Buildpack version 1.2.2\nDownloaded [file:///tmp/buildpacks/59f767b9bf9c7cde279cb3b56367792c/dependencies/https___s3.amazonaws.com_pivotal-buildpacks_nginx_cflinuxfs2_nginx-1.8.0-linux-x64.tgz]\ngrep: Staticfile: No such file or directory\n-----  Using root folder\n-----  Copying project files into public/\n-----  Setting up nginx\ngrep: Staticfile: No such file or directory\nExit status 0\nStaging complete\nUploading droplet, build artifacts cache...\nUploading droplet...\nUploading build artifacts cache...\nUploaded build artifacts cache (131B)\nUploaded droplet (2.4M)\nUploading complete\n\n1 of 1 instances running\n\nApp started\n\n\nOK\n\nApp mydemoapp was started using this command `sh boot.sh`\n\nShowing health and status for app mydemoapp in org dto / space dtoweb as example.person@digital.gov.au...\nOK\n\nrequested state: started\ninstances: 1/1\nusage: 64M x 1 instances\nurls: mydemoapp.apps.staging.digital.gov.au\nlast uploaded: Mon Feb 15 01:46:56 UTC 2016\nstack: cflinuxfs2\nbuildpack: staticfile_buildpack\n\n     state     since                    cpu    memory        disk            details\n#0   running   2016-02-15 12:47:36 PM   0.0%   3.3M of 64M   33.7M of 256M\n\n[~/src/github.com/AusDTO/pcf_demo_app]\nlunix@boran]  (master) -   With just a single command you should now have your application running on the DTO Platform at  http://mydemoapp.apps.staging.digital.gov.au", 
            "title": "Application Deployment"
        }, 
        {
            "location": "/usage/cfcli/application_delete/", 
            "text": "Deleting an Application\n\n\nTo get a list of existing apps deployed in the curent space run \ncf apps\n.\n\n\n[~/src/github.com/AusDTO/demo-app]\nlunix@boran]  (master) -\n cf apps\nGetting apps in org dto / space dtoweb as example.person@digital.gov.au...\nOK\n\nname         requested state   instances   memory   disk   urls\ndto-gov-au   started           1/1         64M      256M   dto-gov-au.apps.staging.digital.gov.au\nmydemoapp    started           1/1         64M      256M   mydemoapp.apps.staging.digital.gov.au\n\n[~/src/github.com/AusDTO/demo-app]\nlunix@boran]  (master) -\n\n\n\n\n\nTo delete an application from the platform is \ncf delete \nappname\n\nYou should be very careful here - \nmeasure twice - cut once !\n\n\n[~/src/github.com/AusDTO/demo-app]\nlunix@boran]  (master) -\n cf delete mydemoapp\n\nReally delete the app mydemoapp?\n y\nDeleting app mydemoapp in org dto / space dtoweb as example.person@digital.gov.au...\nOK\n\n[~/src/github.com/AusDTO/demo-app]\nlunix@boran]  (master) -", 
            "title": "Application Deletion"
        }, 
        {
            "location": "/usage/cfcli/application_delete/#deleting-an-application", 
            "text": "To get a list of existing apps deployed in the curent space run  cf apps .  [~/src/github.com/AusDTO/demo-app]\nlunix@boran]  (master) -  cf apps\nGetting apps in org dto / space dtoweb as example.person@digital.gov.au...\nOK\n\nname         requested state   instances   memory   disk   urls\ndto-gov-au   started           1/1         64M      256M   dto-gov-au.apps.staging.digital.gov.au\nmydemoapp    started           1/1         64M      256M   mydemoapp.apps.staging.digital.gov.au\n\n[~/src/github.com/AusDTO/demo-app]\nlunix@boran]  (master) -   To delete an application from the platform is  cf delete  appname \nYou should be very careful here -  measure twice - cut once !  [~/src/github.com/AusDTO/demo-app]\nlunix@boran]  (master) -  cf delete mydemoapp\n\nReally delete the app mydemoapp?  y\nDeleting app mydemoapp in org dto / space dtoweb as example.person@digital.gov.au...\nOK\n\n[~/src/github.com/AusDTO/demo-app]\nlunix@boran]  (master) -", 
            "title": "Deleting an Application"
        }, 
        {
            "location": "/usage/cfcli/log_access/", 
            "text": "Log Access\n\n\nWe are able to access our application\u2019s log output by using the cf logs command like this:\n\ncf logs mydemoapp\n\n\nThis will tail the application logs, from all Application Instances, straight to your development workstation's console.\n\n\nYou can test it by opening up your browser and accessing \nhttp://mydemoapp.apps.staging.digital.gov.au\n.\nThis will produce the following output:\n\n\n[~/src/github.com/AusDTO/demo-app]\nlunix@boran]  (master) -\n cf logs mydemoapp\nConnected, tailing logs for app mydemoapp in org dto / space dtoweb as example.person@digital.gov.au...\n\n2016-02-15T14:40:11.61+1100 [RTR/0]      OUT mydemoapp.apps.staging.digital.gov.au - [15/02/2016:03:40:11 +0000] \nGET / HTTP/1.1\n 200 0 126 \n-\n \nMozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/47.0.2526.73 Safari/537.36\n 10.0.0.141:14391 x_forwarded_for:\n1.129.96.124\n x_forwarded_proto:\nhttp\n vcap_request_id:27c111af-4ea8-4c26-696c-0e90bd3908eb response_time:0.002084462 app_id:8d1ad4e9-9607-4927-abd3-522c621953b3\n2016-02-15T14:40:11.66+1100 [APP/0]      OUT ==\n /home/vcap/app/nginx/logs/access.log \n==\n2016-02-15T14:40:11.66+1100 [APP/0]      OUT 1.129.96.124, 10.0.0.141 - - - [15/Feb/2016:03:40:11 +0000] \nGET / HTTP/1.1\n 200 126\n2016-02-15T14:40:16.76+1100 [RTR/0]      OUT mydemoapp.apps.staging.digital.gov.au - [15/02/2016:03:40:16 +0000] \nGET / HTTP/1.1\n 304 0 0 \n-\n \nMozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/47.0.2526.73 Safari/537.36\n 10.0.0.141:14391 x_forwarded_for:\n1.129.96.124\n x_forwarded_proto:\nhttp\n vcap_request_id:9bd055fc-9717-431b-7f4d-f244c3d7c581 response_time:0.001701489 app_id:8d1ad4e9-9607-4927-abd3-522c621953b3\n2016-02-15T14:40:17.20+1100 [RTR/0]      OUT mydemoapp.apps.staging.digital.gov.au - [15/02/2016:03:40:17 +0000] \nGET / HTTP/1.1\n 304 0 0 \n-\n \nMozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/47.0.2526.73 Safari/537.36\n 10.0.0.141:14391 x_forwarded_for:\n1.129.96.124\n x_forwarded_proto:\nhttp\n vcap_request_id:40ee6886-f0d9-46d0-7feb-628ce10a5bff response_time:0.001669128 app_id:8d1ad4e9-9607-4927-abd3-522c621953b3\n2016-02-15T14:40:17.44+1100 [RTR/0]      OUT mydemoapp.apps.staging.digital.gov.au - [15/02/2016:03:40:17 +0000] \nGET / HTTP/1.1\n 304 0 0 \n-\n \nMozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/47.0.2526.73 Safari/537.36\n 10.0.0.141:14391 x_forwarded_for:\n1.129.96.124\n x_forwarded_proto:\nhttp\n vcap_request_id:aa887531-4bdb-474e-6768-1bbc45e09fa1 response_time:0.0016547 app_id:8d1ad4e9-9607-4927-abd3-522c621953b3\n2016-02-15T14:40:17.66+1100 [APP/0]      OUT 1.129.96.124, 10.0.0.141 - - - [15/Feb/2016:03:40:16 +0000] \nGET / HTTP/1.1\n 304 0\n2016-02-15T14:40:17.66+1100 [APP/0]      OUT 1.129.96.124, 10.0.0.141 - - - [15/Feb/2016:03:40:17 +0000] \nGET / HTTP/1.1\n 304 0\n2016-02-15T14:40:17.66+1100 [APP/0]      OUT 1.129.96.124, 10.0.0.141 - - - [15/Feb/2016:03:40:17 +0000] \nGET / HTTP/1.1\n 304 0\n2016-02-15T14:40:22.17+1100 [HEALTH/0]   OUT healthcheck passed\n2016-02-15T14:40:22.17+1100 [HEALTH/0]   OUT Exit status 0\n^C[~/src/github.com/AusDTO/demo-app]\nlunix@boran]  (master) -\n\n\n\n\n\nTo see logs from the past:\n\n\n[~/src/github.com/AusDTO/demo-app]\nlunix@boran]  (master) -\n cf logs --recent mydemoapp\nConnected, dumping recent logs for app mydemoapp in org dto / space dtoweb as example.person@digital.gov.au...\n\n2016-02-15T14:38:23.91+1100 [STG/0]      OUT Downloading staticfile_buildpack...\n2016-02-15T14:38:23.96+1100 [STG/0]      OUT Downloaded staticfile_buildpack\n2016-02-15T14:38:23.98+1100 [STG/0]      OUT Downloaded buildpacks\n2016-02-15T14:38:23.98+1100 [STG/0]      OUT Staging...\n...\n...", 
            "title": "Log Access"
        }, 
        {
            "location": "/usage/cfcli/log_access/#log-access", 
            "text": "We are able to access our application\u2019s log output by using the cf logs command like this: cf logs mydemoapp  This will tail the application logs, from all Application Instances, straight to your development workstation's console.  You can test it by opening up your browser and accessing  http://mydemoapp.apps.staging.digital.gov.au .\nThis will produce the following output:  [~/src/github.com/AusDTO/demo-app]\nlunix@boran]  (master) -  cf logs mydemoapp\nConnected, tailing logs for app mydemoapp in org dto / space dtoweb as example.person@digital.gov.au...\n\n2016-02-15T14:40:11.61+1100 [RTR/0]      OUT mydemoapp.apps.staging.digital.gov.au - [15/02/2016:03:40:11 +0000]  GET / HTTP/1.1  200 0 126  -   Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/47.0.2526.73 Safari/537.36  10.0.0.141:14391 x_forwarded_for: 1.129.96.124  x_forwarded_proto: http  vcap_request_id:27c111af-4ea8-4c26-696c-0e90bd3908eb response_time:0.002084462 app_id:8d1ad4e9-9607-4927-abd3-522c621953b3\n2016-02-15T14:40:11.66+1100 [APP/0]      OUT ==  /home/vcap/app/nginx/logs/access.log  ==\n2016-02-15T14:40:11.66+1100 [APP/0]      OUT 1.129.96.124, 10.0.0.141 - - - [15/Feb/2016:03:40:11 +0000]  GET / HTTP/1.1  200 126\n2016-02-15T14:40:16.76+1100 [RTR/0]      OUT mydemoapp.apps.staging.digital.gov.au - [15/02/2016:03:40:16 +0000]  GET / HTTP/1.1  304 0 0  -   Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/47.0.2526.73 Safari/537.36  10.0.0.141:14391 x_forwarded_for: 1.129.96.124  x_forwarded_proto: http  vcap_request_id:9bd055fc-9717-431b-7f4d-f244c3d7c581 response_time:0.001701489 app_id:8d1ad4e9-9607-4927-abd3-522c621953b3\n2016-02-15T14:40:17.20+1100 [RTR/0]      OUT mydemoapp.apps.staging.digital.gov.au - [15/02/2016:03:40:17 +0000]  GET / HTTP/1.1  304 0 0  -   Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/47.0.2526.73 Safari/537.36  10.0.0.141:14391 x_forwarded_for: 1.129.96.124  x_forwarded_proto: http  vcap_request_id:40ee6886-f0d9-46d0-7feb-628ce10a5bff response_time:0.001669128 app_id:8d1ad4e9-9607-4927-abd3-522c621953b3\n2016-02-15T14:40:17.44+1100 [RTR/0]      OUT mydemoapp.apps.staging.digital.gov.au - [15/02/2016:03:40:17 +0000]  GET / HTTP/1.1  304 0 0  -   Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/47.0.2526.73 Safari/537.36  10.0.0.141:14391 x_forwarded_for: 1.129.96.124  x_forwarded_proto: http  vcap_request_id:aa887531-4bdb-474e-6768-1bbc45e09fa1 response_time:0.0016547 app_id:8d1ad4e9-9607-4927-abd3-522c621953b3\n2016-02-15T14:40:17.66+1100 [APP/0]      OUT 1.129.96.124, 10.0.0.141 - - - [15/Feb/2016:03:40:16 +0000]  GET / HTTP/1.1  304 0\n2016-02-15T14:40:17.66+1100 [APP/0]      OUT 1.129.96.124, 10.0.0.141 - - - [15/Feb/2016:03:40:17 +0000]  GET / HTTP/1.1  304 0\n2016-02-15T14:40:17.66+1100 [APP/0]      OUT 1.129.96.124, 10.0.0.141 - - - [15/Feb/2016:03:40:17 +0000]  GET / HTTP/1.1  304 0\n2016-02-15T14:40:22.17+1100 [HEALTH/0]   OUT healthcheck passed\n2016-02-15T14:40:22.17+1100 [HEALTH/0]   OUT Exit status 0\n^C[~/src/github.com/AusDTO/demo-app]\nlunix@boran]  (master) -   To see logs from the past:  [~/src/github.com/AusDTO/demo-app]\nlunix@boran]  (master) -  cf logs --recent mydemoapp\nConnected, dumping recent logs for app mydemoapp in org dto / space dtoweb as example.person@digital.gov.au...\n\n2016-02-15T14:38:23.91+1100 [STG/0]      OUT Downloading staticfile_buildpack...\n2016-02-15T14:38:23.96+1100 [STG/0]      OUT Downloaded staticfile_buildpack\n2016-02-15T14:38:23.98+1100 [STG/0]      OUT Downloaded buildpacks\n2016-02-15T14:38:23.98+1100 [STG/0]      OUT Staging...\n...\n...", 
            "title": "Log Access"
        }, 
        {
            "location": "/support/incident_response/", 
            "text": "Incident Response FAQ\n\n\nDowntime is not a matter of \nif\n, it's a matter of \nwhen\n.\n\n\nThese are common questions we get from teams launching services about what cloud.gov.au provides, what your responsibilities are when launching services, and how we respond when things go wrong.\n\n\nHow do I find out about problems with cloud.gov.au\n\n\nWe publish status and availability for the platform and applications on \nstatus.cloud.gov.au\n.\n\n\nDuring incidents, we commit to delivering status updates every 15 minutes.\n\n\nTriage and escalation process for apps on cloud.gov.au\n\n\n\n\nI have a service on cloud.gov.au.\n\n\nYou're launching a service on cloud.gov.au, and you want to know where the responsibilities are.\n\n\nWhat am I responsible for?\n\n\n\n\nThe availability of my service.\n\n\nThe availability of the apps that make up my service.\n\n\nMaking changes to my service.\n\n\nSecurity and classification of the data stored by my service.\n\n\nSending emails for my service.\n\n\nFor example, emails for user sign ups, password resets, notifications, etc. \n\n\n\n\nWhat am I \nnot\n responsible for?\n\n\n\n\nThe availability and uptime of the hosting that my service depends on.\n\n\nThe availability and uptime of the hosting that the apps that make up my service depends on.\n\n\nFor example, if you cannot diagnose the interruption to your service within the applications that make up your service, contact cloud.gov.au\n\n\n\n\nWhat is the cloud.gov.au team responsible for?\n\n\n\n\nProviding a platform to run services on.\n\n\nProviding tools to make changes to those services faster, standard, and safer.\n\n\nEnsuring the availability and uptime of the platform, so applications can successfully serve traffic.\n\n\nAny backing services provided by the platform that applications depend on (like databases, caching, etc).\n\n\nDomain name management, load balancing, and redirection, for any apps or services running on the platform.\n\n\n\n\nWhat is the cloud.gov.au team \nnot\n responsible for?\n\n\n\n\nApplications running on the platform\n\n\nThe apps that make up the services running on the platform.\n\n\n\n\nI\u2019m having an outage.\n\n\nThings are going to break. We're here to help you get back on your feet.\n\n\nWhat should I escalate to the cloud.gov.au team?\n\n\n\n\nA suspected failure of the application runtime environment, that is impacting the availability of your app.\n\n\nA suspected failure of a backing service used by your app, provided by the cloud.gov.au platform, that is impacting the availability of your app.\n\n\n\n\nWhat should I \nnot\n escalate to the cloud.gov.au team?\n\n\n\n\nFailures in your application that are caused by configuration error, or code change.\n\n\nFor example, if you apply an update to your service, and the service or a webpage becomes unavailable, you should investigate the root cause in your application layer before asking the cloud.gov.au team. \n\n\n\n\nHow do we triage incidents that are a mix of service, app, and cloud.gov.au problems?\n\n\n\n\nContact the cloud.gov.au team.\n\n\n\n\nHow do I contact the cloud.gov.au team?\n\n\n\n\nCreate a support ticket at \nsupport.cloud.gov.au\n, or\n\n\nSend an email to \nincidents@cloud.gov.au\n.\n\n\nThis will post a notification in #cloud-gov-au on Slack.\n\n\nThis will alert primary on-call for cloud.gov.au, who will triage the incident.\n\n\n\n\nHow do we run incident management?\n\n\n\n\nJoin the #incidents channel on Slack.\n\n\nWe will appoint an Incident Response Commander to run the incident.\n\n\nThe topic of the #incidents channel will be updated.\n\n\nWe will provide 15-minutely updates on \nstatus.cloud.gov.au\n.\n\n\nWe will hold and publish a Post Incident Review\n\n\n\n\nPlease refrain from posting in this channel unless you are directly working on the incident.", 
            "title": "Incident response"
        }, 
        {
            "location": "/support/incident_response/#incident-response-faq", 
            "text": "Downtime is not a matter of  if , it's a matter of  when .  These are common questions we get from teams launching services about what cloud.gov.au provides, what your responsibilities are when launching services, and how we respond when things go wrong.", 
            "title": "Incident Response FAQ"
        }, 
        {
            "location": "/support/incident_response/#how-do-i-find-out-about-problems-with-cloudgovau", 
            "text": "We publish status and availability for the platform and applications on  status.cloud.gov.au .  During incidents, we commit to delivering status updates every 15 minutes.", 
            "title": "How do I find out about problems with cloud.gov.au"
        }, 
        {
            "location": "/support/incident_response/#triage-and-escalation-process-for-apps-on-cloudgovau", 
            "text": "", 
            "title": "Triage and escalation process for apps on cloud.gov.au"
        }, 
        {
            "location": "/support/incident_response/#i-have-a-service-on-cloudgovau", 
            "text": "You're launching a service on cloud.gov.au, and you want to know where the responsibilities are.", 
            "title": "I have a service on cloud.gov.au."
        }, 
        {
            "location": "/support/incident_response/#what-am-i-responsible-for", 
            "text": "The availability of my service.  The availability of the apps that make up my service.  Making changes to my service.  Security and classification of the data stored by my service.  Sending emails for my service.  For example, emails for user sign ups, password resets, notifications, etc.", 
            "title": "What am I responsible for?"
        }, 
        {
            "location": "/support/incident_response/#what-am-i-not-responsible-for", 
            "text": "The availability and uptime of the hosting that my service depends on.  The availability and uptime of the hosting that the apps that make up my service depends on.  For example, if you cannot diagnose the interruption to your service within the applications that make up your service, contact cloud.gov.au", 
            "title": "What am I not responsible for?"
        }, 
        {
            "location": "/support/incident_response/#what-is-the-cloudgovau-team-responsible-for", 
            "text": "Providing a platform to run services on.  Providing tools to make changes to those services faster, standard, and safer.  Ensuring the availability and uptime of the platform, so applications can successfully serve traffic.  Any backing services provided by the platform that applications depend on (like databases, caching, etc).  Domain name management, load balancing, and redirection, for any apps or services running on the platform.", 
            "title": "What is the cloud.gov.au team responsible for?"
        }, 
        {
            "location": "/support/incident_response/#what-is-the-cloudgovau-team-not-responsible-for", 
            "text": "Applications running on the platform  The apps that make up the services running on the platform.", 
            "title": "What is the cloud.gov.au team not responsible for?"
        }, 
        {
            "location": "/support/incident_response/#im-having-an-outage", 
            "text": "Things are going to break. We're here to help you get back on your feet.", 
            "title": "I\u2019m having an outage."
        }, 
        {
            "location": "/support/incident_response/#what-should-i-escalate-to-the-cloudgovau-team", 
            "text": "A suspected failure of the application runtime environment, that is impacting the availability of your app.  A suspected failure of a backing service used by your app, provided by the cloud.gov.au platform, that is impacting the availability of your app.", 
            "title": "What should I escalate to the cloud.gov.au team?"
        }, 
        {
            "location": "/support/incident_response/#what-should-i-not-escalate-to-the-cloudgovau-team", 
            "text": "Failures in your application that are caused by configuration error, or code change.  For example, if you apply an update to your service, and the service or a webpage becomes unavailable, you should investigate the root cause in your application layer before asking the cloud.gov.au team.", 
            "title": "What should I not escalate to the cloud.gov.au team?"
        }, 
        {
            "location": "/support/incident_response/#how-do-we-triage-incidents-that-are-a-mix-of-service-app-and-cloudgovau-problems", 
            "text": "Contact the cloud.gov.au team.", 
            "title": "How do we triage incidents that are a mix of service, app, and cloud.gov.au problems?"
        }, 
        {
            "location": "/support/incident_response/#how-do-i-contact-the-cloudgovau-team", 
            "text": "Create a support ticket at  support.cloud.gov.au , or  Send an email to  incidents@cloud.gov.au .  This will post a notification in #cloud-gov-au on Slack.  This will alert primary on-call for cloud.gov.au, who will triage the incident.", 
            "title": "How do I contact the cloud.gov.au team?"
        }, 
        {
            "location": "/support/incident_response/#how-do-we-run-incident-management", 
            "text": "Join the #incidents channel on Slack.  We will appoint an Incident Response Commander to run the incident.  The topic of the #incidents channel will be updated.  We will provide 15-minutely updates on  status.cloud.gov.au .  We will hold and publish a Post Incident Review   Please refrain from posting in this channel unless you are directly working on the incident.", 
            "title": "How do we run incident management?"
        }, 
        {
            "location": "/support/incident_reports/", 
            "text": "Intro\n\n\nThe cloud.gov.au team takes the performance of the platform seriously. While we rely on our suppliers to provide software and infrastructure to deliver cloud.gov.au, we own our availability, and we take full responsibility for service performance.\n\n\nWhenever we have an incident, we run a Post Incident Review to learn about what happened, and what we can do differently.\n\n\nWe do this because we believe there is valuable information to be learnt from failures, which can be applied to improve the systems, tools, and processes that power cloud.gov.au.\n\n\nReports\n\n\nThe reports produced from these Post Incident Reviews are published below:\n\n\n\n\nAugust 12, 2016\n\n\nJune 05, 2016\n\n\nFebruary 11, 2016", 
            "title": "Intro"
        }, 
        {
            "location": "/support/incident_reports/#intro", 
            "text": "The cloud.gov.au team takes the performance of the platform seriously. While we rely on our suppliers to provide software and infrastructure to deliver cloud.gov.au, we own our availability, and we take full responsibility for service performance.  Whenever we have an incident, we run a Post Incident Review to learn about what happened, and what we can do differently.  We do this because we believe there is valuable information to be learnt from failures, which can be applied to improve the systems, tools, and processes that power cloud.gov.au.", 
            "title": "Intro"
        }, 
        {
            "location": "/support/incident_reports/#reports", 
            "text": "The reports produced from these Post Incident Reviews are published below:   August 12, 2016  June 05, 2016  February 11, 2016", 
            "title": "Reports"
        }, 
        {
            "location": "/support/incident_reports/2016-08-12/", 
            "text": "August 12, 2016 incident report\n\n\nOn August 12, 2016 there was approximately 79 minutes of partial availability for dto.gov.au, australia.gov.au, gov.au/alpha, gov.au/marketplace. During this time, approximately a third of visitors to these sites were unable to view them.\n\n\nThe cloud.gov.au team takes the availability of these sites seriously, and we are really sorry for the degraded service. While we rely on our suppliers to provide the infrastructure to deliver services, we own our availability, and we take full responsibility for the degraded service.\n\n\nThis report explains what we\u2019ve learnt about what happened, what factors contributed to the outage, and what we\u2019re doing to prevent similar incidents occurring in the future.\n\n\nWhat we learnt\n\n\nThe cloud.gov.au service is made of two components: a Platform as a Service (PaaS) for running applications, and a HTTPS termination layer (httpredir) for exposing these applications to the public internet.\n\n\nhttpredir issues redirects for dto.gov.au and australia.gov.au, serves the www.gov.au, www.gov.au/alpha, and gov.au/marketplace sites, and performs SSL termination on these sites. We do this because we must support older web browsers and operating systems that don\u2019t support more modern methods for serving content.\nBecause of these constraints, we use a very simplistic form of load balancing called Round Robin DNS to make sure people can access our services in a variety of degraded conditions.\n\n\nWhen using Round Robin DNS, a web browser has a choice of different addresses it can connect to when requesting content. The web browser will rotate through these addresses when making requests. This ensures that if a request to one address fails, a user can still get content by manually hitting the refresh button in their browser.\n\n\nThe httpredir service runs in three availability zones in ap-southeast-2 (2a, 2b, and 2c), and is scaled with Auto Scaling Groups.\n\n\nSites and services hosted on httpredir were partially unavailable because of a localised network failure in ap-southeast-2c. This caused connections from web browsers to time out when trying to access sites provided by httpredir.\n\n\nWe observed the localised network failure started at approximately 10.16, and was fixed by AWS at approximately 11.35.\n\n\nContributing factors\n\n\nAfter conducting a Post Incident Review, we have determined the following factors contributed to the degraded service:\n\n\n\n\nWe opted for Round Robin DNS as a load balancing technique over other load balancing techniques because we believed it struck the right balance between user experience and architectural complexity. In the case of this particular failure, user experience lost out.\n\n\nA routing failure on AWS\u2019s network caused large volumes of connections to the httpredir instance in ap-southeast-2c to time out.\n\n\nThe routing failure only affected instances in ap-southeast-2c that were exposed to the internet with an Elastic IP (EIP). All of our httpredir instances have EIPs assigned.\n\n\n\n\nWhat we're doing differently\n\n\nWe see service failure like these as both an excellent opportunity to learn about how complex systems fail, and how we can improve the reliability and quality of service the cloud.gov.au team provides.\n\n\n\n\nWe will add an early step to our incident response run sheet to decide if we should escalate to suppliers of technology we use. The intention is to reduce the lead time on responses, and help us build context quicker.\n\n\nWe intend to change how we share output from network diagnostic tools like \nmtr\n to include the command as well as the output, so everyone working the incident can easily reproduce the steps to troubleshoot.\n\n\nWe intend to disable alerts for some monitoring checks. As we experience more failures, we are learning more about what monitoring checks are useful indicators of whole of service issues that require human intervention, and what are diagnostic checks that help troubleshoot incidents.\n\n\nWe will investigate setting up canaries across multiple locations around the world to constantly collect network performance metrics. This information will help us establish a network performance baseline more quickly during outages.\n\n\nWe will more clearly define in our incident response run sheet when outwards communication should happen, to ensure all service owners receive timely information about degraded services.\n\n\n\n\nConclusion\n\n\nAll of us on the cloud.gov.au team apologise for the impact of this outage. We continue to analyse the events leading up to this incident and the steps we took to restore service. This work will guide us as we improve the systems, tools, and processes that power cloud.gov.au.\n\n\nIf you have any questions, please don't hesitate to contact the cloud.gov.au team at support@cloud.gov.au.", 
            "title": "2016-08-12"
        }, 
        {
            "location": "/support/incident_reports/2016-08-12/#august-12-2016-incident-report", 
            "text": "On August 12, 2016 there was approximately 79 minutes of partial availability for dto.gov.au, australia.gov.au, gov.au/alpha, gov.au/marketplace. During this time, approximately a third of visitors to these sites were unable to view them.  The cloud.gov.au team takes the availability of these sites seriously, and we are really sorry for the degraded service. While we rely on our suppliers to provide the infrastructure to deliver services, we own our availability, and we take full responsibility for the degraded service.  This report explains what we\u2019ve learnt about what happened, what factors contributed to the outage, and what we\u2019re doing to prevent similar incidents occurring in the future.", 
            "title": "August 12, 2016 incident report"
        }, 
        {
            "location": "/support/incident_reports/2016-08-12/#what-we-learnt", 
            "text": "The cloud.gov.au service is made of two components: a Platform as a Service (PaaS) for running applications, and a HTTPS termination layer (httpredir) for exposing these applications to the public internet.  httpredir issues redirects for dto.gov.au and australia.gov.au, serves the www.gov.au, www.gov.au/alpha, and gov.au/marketplace sites, and performs SSL termination on these sites. We do this because we must support older web browsers and operating systems that don\u2019t support more modern methods for serving content.\nBecause of these constraints, we use a very simplistic form of load balancing called Round Robin DNS to make sure people can access our services in a variety of degraded conditions.  When using Round Robin DNS, a web browser has a choice of different addresses it can connect to when requesting content. The web browser will rotate through these addresses when making requests. This ensures that if a request to one address fails, a user can still get content by manually hitting the refresh button in their browser.  The httpredir service runs in three availability zones in ap-southeast-2 (2a, 2b, and 2c), and is scaled with Auto Scaling Groups.  Sites and services hosted on httpredir were partially unavailable because of a localised network failure in ap-southeast-2c. This caused connections from web browsers to time out when trying to access sites provided by httpredir.  We observed the localised network failure started at approximately 10.16, and was fixed by AWS at approximately 11.35.", 
            "title": "What we learnt"
        }, 
        {
            "location": "/support/incident_reports/2016-08-12/#contributing-factors", 
            "text": "After conducting a Post Incident Review, we have determined the following factors contributed to the degraded service:   We opted for Round Robin DNS as a load balancing technique over other load balancing techniques because we believed it struck the right balance between user experience and architectural complexity. In the case of this particular failure, user experience lost out.  A routing failure on AWS\u2019s network caused large volumes of connections to the httpredir instance in ap-southeast-2c to time out.  The routing failure only affected instances in ap-southeast-2c that were exposed to the internet with an Elastic IP (EIP). All of our httpredir instances have EIPs assigned.", 
            "title": "Contributing factors"
        }, 
        {
            "location": "/support/incident_reports/2016-08-12/#what-were-doing-differently", 
            "text": "We see service failure like these as both an excellent opportunity to learn about how complex systems fail, and how we can improve the reliability and quality of service the cloud.gov.au team provides.   We will add an early step to our incident response run sheet to decide if we should escalate to suppliers of technology we use. The intention is to reduce the lead time on responses, and help us build context quicker.  We intend to change how we share output from network diagnostic tools like  mtr  to include the command as well as the output, so everyone working the incident can easily reproduce the steps to troubleshoot.  We intend to disable alerts for some monitoring checks. As we experience more failures, we are learning more about what monitoring checks are useful indicators of whole of service issues that require human intervention, and what are diagnostic checks that help troubleshoot incidents.  We will investigate setting up canaries across multiple locations around the world to constantly collect network performance metrics. This information will help us establish a network performance baseline more quickly during outages.  We will more clearly define in our incident response run sheet when outwards communication should happen, to ensure all service owners receive timely information about degraded services.", 
            "title": "What we're doing differently"
        }, 
        {
            "location": "/support/incident_reports/2016-08-12/#conclusion", 
            "text": "All of us on the cloud.gov.au team apologise for the impact of this outage. We continue to analyse the events leading up to this incident and the steps we took to restore service. This work will guide us as we improve the systems, tools, and processes that power cloud.gov.au.  If you have any questions, please don't hesitate to contact the cloud.gov.au team at support@cloud.gov.au.", 
            "title": "Conclusion"
        }, 
        {
            "location": "/support/incident_reports/2016-06-05/", 
            "text": "June 5, 2016 incident report\n\n\nOn June 5, 2016 there was a two hour outage with one of DTO\u2019s service providers, Amazon Web Services (AWS). This outage affected the availability of the dto.gov.au, www.gov.au and, GOV.AU alpha websites, for approximately 1/3rd of visitors to these sites.\n\n\nThe cloud.gov.au team takes the availability of these sites seriously, and sincerely apologises for the downtime. While we rely on our suppliers to provide the infrastructure to deliver services, we own our availability, and we take full responsibility for the degraded service.\n\n\nThis report explains what we\u2019ve learnt about what happened, what factors contributed to the outage, and what we\u2019re doing to prevent similar incidents occurring in the future.\n\n\nWhat we learnt\n\n\nAs reported in the media, there was a large scale outage at Amazon\u2019s data centers in Sydney. Although Amazon have not confirmed, the widely held view in the tech industry is that the outage was caused by a power failure triggered by rainfall from the east coast low.\n\n\nDuring this time, some AWS services (EC2 and RDS) were unavailable from the public internet. We observed during this time that some of these services were accessible within AWS, but not from the public internet.\n\n\nWe use EC2 on our httpredir service. httpredir issues redirects for dto.gov.au, serves the www.gov.au and www.gov.au/alpha sites, and does minimal SSL termination. We do this because we must support older web browsers and environments that don\u2019t support more modern methods for serving content. This allows, for example, people in Defense to view our website.\n\n\nBecause of these constraints, we use a very simplistic form of load balancing called Round Robin DNS to make sure people can access our services in a variety of degraded conditions.\n\n\nWhen using Round Robin DNS, a web browser has a choice of different addresses it can connect to when requesting content. The web browser will rotate through these addresses when making requests. This ensures that if a request to one address fails, a user can still get content by manually hitting the refresh button in their browser.\n\n\nDuring the outage yesterday, we observed that this behaviour did not occur. When a request failed, web browsers would retry on the same address. This meant that approximately 1/3rd of people who tried to access dto.gov.au or gov.au/alpha were unable to reach the site for the duration of the outage.\n\n\nwww.dto.gov.au was still available during this time, and inbound links from search and social media still worked.\n\n\nContributing factors\n\n\nThere are several contributing factors that lead to the degraded service on June 5, 2016:\n\n\n\n\nOur understanding of how Round Robin DNS should work in modern browsers was different to how it worked during this outage.\n\n\nWe opted for Round Robin DNS as a load balancing technique over other load balancing techniques because we believed it struck the right balance between user experience and architectural complexity.\n\n\nOur monitoring for gov.au/alpha and dto.gov.au was mostly silenced during the outage.  Prior to the AWS outage beginning, we were performing maintenance to reduce the noisiness of some monitoring checks. This reduced our visibility during the outage.\n\n\nAmazon\u2019s data centers are located in an area (Mascot) that has a poor reputation for flooding during major downpours. Amazon made a trade off to build their data centers in these locations because the location was cost effective, and has good connectivity to the rest of the internet.\n\n\nGiven network connectivity inside AWS appeared to be fine, but connecting in or out from an affected Availability Zone (AZ) failed, this suggests there was a problems with upstream network connectivity from this AZ.\n\n\n\n\nWhat we\u2019re doing differently\n\n\nBased on what we have observed about how Round Robin DNS works during this type of failure mode, we are building tests to verify this behaviour is exhibited in the systems we build.\n\n\nTo ensure the behaviour doesn\u2019t regress, these tests will be automatically run on every change to the httpredir service.\n\n\nOnce again, the cloud.gov.au team sincerely apologises for the degraded service yesterday. If you have any questions, please don't hesitate to contact the cloud.gov.au team at support@cloud.gov.au.", 
            "title": "2016-06-05"
        }, 
        {
            "location": "/support/incident_reports/2016-06-05/#june-5-2016-incident-report", 
            "text": "On June 5, 2016 there was a two hour outage with one of DTO\u2019s service providers, Amazon Web Services (AWS). This outage affected the availability of the dto.gov.au, www.gov.au and, GOV.AU alpha websites, for approximately 1/3rd of visitors to these sites.  The cloud.gov.au team takes the availability of these sites seriously, and sincerely apologises for the downtime. While we rely on our suppliers to provide the infrastructure to deliver services, we own our availability, and we take full responsibility for the degraded service.  This report explains what we\u2019ve learnt about what happened, what factors contributed to the outage, and what we\u2019re doing to prevent similar incidents occurring in the future.", 
            "title": "June 5, 2016 incident report"
        }, 
        {
            "location": "/support/incident_reports/2016-06-05/#what-we-learnt", 
            "text": "As reported in the media, there was a large scale outage at Amazon\u2019s data centers in Sydney. Although Amazon have not confirmed, the widely held view in the tech industry is that the outage was caused by a power failure triggered by rainfall from the east coast low.  During this time, some AWS services (EC2 and RDS) were unavailable from the public internet. We observed during this time that some of these services were accessible within AWS, but not from the public internet.  We use EC2 on our httpredir service. httpredir issues redirects for dto.gov.au, serves the www.gov.au and www.gov.au/alpha sites, and does minimal SSL termination. We do this because we must support older web browsers and environments that don\u2019t support more modern methods for serving content. This allows, for example, people in Defense to view our website.  Because of these constraints, we use a very simplistic form of load balancing called Round Robin DNS to make sure people can access our services in a variety of degraded conditions.  When using Round Robin DNS, a web browser has a choice of different addresses it can connect to when requesting content. The web browser will rotate through these addresses when making requests. This ensures that if a request to one address fails, a user can still get content by manually hitting the refresh button in their browser.  During the outage yesterday, we observed that this behaviour did not occur. When a request failed, web browsers would retry on the same address. This meant that approximately 1/3rd of people who tried to access dto.gov.au or gov.au/alpha were unable to reach the site for the duration of the outage.  www.dto.gov.au was still available during this time, and inbound links from search and social media still worked.", 
            "title": "What we learnt"
        }, 
        {
            "location": "/support/incident_reports/2016-06-05/#contributing-factors", 
            "text": "There are several contributing factors that lead to the degraded service on June 5, 2016:   Our understanding of how Round Robin DNS should work in modern browsers was different to how it worked during this outage.  We opted for Round Robin DNS as a load balancing technique over other load balancing techniques because we believed it struck the right balance between user experience and architectural complexity.  Our monitoring for gov.au/alpha and dto.gov.au was mostly silenced during the outage.  Prior to the AWS outage beginning, we were performing maintenance to reduce the noisiness of some monitoring checks. This reduced our visibility during the outage.  Amazon\u2019s data centers are located in an area (Mascot) that has a poor reputation for flooding during major downpours. Amazon made a trade off to build their data centers in these locations because the location was cost effective, and has good connectivity to the rest of the internet.  Given network connectivity inside AWS appeared to be fine, but connecting in or out from an affected Availability Zone (AZ) failed, this suggests there was a problems with upstream network connectivity from this AZ.", 
            "title": "Contributing factors"
        }, 
        {
            "location": "/support/incident_reports/2016-06-05/#what-were-doing-differently", 
            "text": "Based on what we have observed about how Round Robin DNS works during this type of failure mode, we are building tests to verify this behaviour is exhibited in the systems we build.  To ensure the behaviour doesn\u2019t regress, these tests will be automatically run on every change to the httpredir service.  Once again, the cloud.gov.au team sincerely apologises for the degraded service yesterday. If you have any questions, please don't hesitate to contact the cloud.gov.au team at support@cloud.gov.au.", 
            "title": "What we\u2019re doing differently"
        }, 
        {
            "location": "/support/incident_reports/2016-02-11/", 
            "text": "February 11, 2016 incident report\n\n\nYesterday the DIBP Citizenship Appointment Booking service was unavailable for 14 minutes. We understand the importance of keeping these services up for the public, especially during beta when users are interacting with these services for the first time. We are really sorry for the unavailability, and will share with you the events that took place, and the steps we\u2019re taking to ensure a failure of this type doesn't happen again.\n\n\nBackground\n\n\nThe DIBP application is running on a hosting platform we make available to both teams in the transformation programme, and internally to the DTO. The hosting platform is built with Pivotal Cloud Foundry (PCF), an industry leading Platform as a Service technology. PCF is deployed on top of Amazon Web Services (AWS), the industry leader Infrastructure as a Service provider.\n\n\nThe DIBP application was unavailable because of a failure in the underlying hosting platform. The hosting platform is a complex system with many moving parts, however it is designed to be reliable (applications continue to work in the event of single or multiple failures) and fault tolerant (the system heals itself when it detects a failure). In this case the system was fault tolerant, but it was not reliable \u2013 causing the DIBP application to become unavailable.\n\n\nWhat happened\n\n\nThis is the timeline of events that occurred on Thursday February 11 2016, starting at 10.42am:\n\n\n\n\n10.42: the DIBP Citizenship Appointment Booking application became unavailable due to a hosting platform failure.\n\n\n10.46: DTO Infrastructure \n Platform engineers were alerted to the application being unavailable.\n\n\n10.56: The platform auto-healed with no human intervention, and the application became available again.\n\n\n\n\nThis is what we have learnt about what happened:\n\n\n\n\nAn AWS EC2 instance running a Diego Brain was terminated.\n\n\nTo contextualise, \nhave a look at how\n the Diego Brain fits in to the \nDiego Architecture\n (the Diego Brain is a blue box at the bottom of the diagram).\n\n\nThe Diego Brain is responsible for publishing information about where applications are running on the platform.\n\n\nThis information is used by the router to route requests to the running application, where ever it may be running on the platform.\n\n\nWhile this may sound unnecessarily complicated, this allows workloads to be shifted across the platform when the underlying infrastructure fails or is being upgraded, ensuring fault tolerance.\n\n\nIt is unclear what caused the instance to be terminated, however it could either be AWS EC2 service killing the instance, or because the PCF Operations Manager failed a health check and reprovisioned the instance.\n\n\nWhat we do know is that the PCF Operations Manager has no logs indicating it terminated an instance, so we assert that AWS killed the EC2 instance.\n\n\n\n\nBecause the Diego Brain periodically re-publishes all routing information with a Time To Live (TTL), when the Diego Brain instance was terminated, the routing information expired in the database.\n\n\nThis meant that requests were unable to be routed to the application.\n\n\nThe PCF Operations Manager detected the EC2 instance had disappeared, and initiated an auto recovery to create a replacement Diego Brain instance, and bring it into service\n\n\nWhile the EC2 instance running the Diego Brain was offline, the application was unavailable.\n\n\nContributing factors\n\n\nAfter conducting a Post Incident Review, we have determined the two direct contributing factors were:\n\n\n\n\nA single point of failure introduced during the setup of the platform, due to time pressures on delivery. We needed to get the platform running so the application could be hosted, and we missed the HA step.\n\n\nEC2 instances fail periodically, without warning. This is part of the Amazon design, and the platform is designed and built to recover when these failures happen.\n\n\n\n\nWhat we're doing to fix this\n\n\nThis was the first failure of the platform that we have experienced since it went live on January 22, 2016. We see this platform failure as both an excellent opportunity to learn about how complex systems fail, and how we can improve the reliability and quality of service the Infrastructure \n Platforms team provides.\n\n\n\n\nWe will remove the single point of failure by increasing the number of Diego Brain instances.\n\n\nWe will audit the currently deployed instances to verify we meet the recommended counts of instance types for a fully Highly Available PCF deployment.\n\n\nWe will make improvements to the logging so we can ascertain exactly what has happened on the underlying EC2 infrastructure, during incidents and post-hoc analysis.\n\n\nWe will make improvements to the monitoring so we more frequently probe the running applications, and detect failures earlier.\n\n\nWe will improve our escalation process to notify engineers more aggressively when failures are detected, and provide a mechanism for people to contact us for undetected failures.\n\n\n\n\nConclusion\n\n\nAll of us on the Infrastructure \n Platforms team would like to apologize for the impact of this outage. We will continue to analyze the events leading up to this incident and the steps we took to restore service. This work will guide us as we improve the systems and processes that power the DTO Platform.\n\n\nIf you have any questions, please don't hesitate to contact the cloud.gov.au team at support@cloud.gov.au.", 
            "title": "2016-02-11"
        }, 
        {
            "location": "/support/incident_reports/2016-02-11/#february-11-2016-incident-report", 
            "text": "Yesterday the DIBP Citizenship Appointment Booking service was unavailable for 14 minutes. We understand the importance of keeping these services up for the public, especially during beta when users are interacting with these services for the first time. We are really sorry for the unavailability, and will share with you the events that took place, and the steps we\u2019re taking to ensure a failure of this type doesn't happen again.", 
            "title": "February 11, 2016 incident report"
        }, 
        {
            "location": "/support/incident_reports/2016-02-11/#background", 
            "text": "The DIBP application is running on a hosting platform we make available to both teams in the transformation programme, and internally to the DTO. The hosting platform is built with Pivotal Cloud Foundry (PCF), an industry leading Platform as a Service technology. PCF is deployed on top of Amazon Web Services (AWS), the industry leader Infrastructure as a Service provider.  The DIBP application was unavailable because of a failure in the underlying hosting platform. The hosting platform is a complex system with many moving parts, however it is designed to be reliable (applications continue to work in the event of single or multiple failures) and fault tolerant (the system heals itself when it detects a failure). In this case the system was fault tolerant, but it was not reliable \u2013 causing the DIBP application to become unavailable.", 
            "title": "Background"
        }, 
        {
            "location": "/support/incident_reports/2016-02-11/#what-happened", 
            "text": "This is the timeline of events that occurred on Thursday February 11 2016, starting at 10.42am:   10.42: the DIBP Citizenship Appointment Booking application became unavailable due to a hosting platform failure.  10.46: DTO Infrastructure   Platform engineers were alerted to the application being unavailable.  10.56: The platform auto-healed with no human intervention, and the application became available again.   This is what we have learnt about what happened:   An AWS EC2 instance running a Diego Brain was terminated.  To contextualise,  have a look at how  the Diego Brain fits in to the  Diego Architecture  (the Diego Brain is a blue box at the bottom of the diagram).  The Diego Brain is responsible for publishing information about where applications are running on the platform.  This information is used by the router to route requests to the running application, where ever it may be running on the platform.  While this may sound unnecessarily complicated, this allows workloads to be shifted across the platform when the underlying infrastructure fails or is being upgraded, ensuring fault tolerance.  It is unclear what caused the instance to be terminated, however it could either be AWS EC2 service killing the instance, or because the PCF Operations Manager failed a health check and reprovisioned the instance.  What we do know is that the PCF Operations Manager has no logs indicating it terminated an instance, so we assert that AWS killed the EC2 instance.   Because the Diego Brain periodically re-publishes all routing information with a Time To Live (TTL), when the Diego Brain instance was terminated, the routing information expired in the database.  This meant that requests were unable to be routed to the application.  The PCF Operations Manager detected the EC2 instance had disappeared, and initiated an auto recovery to create a replacement Diego Brain instance, and bring it into service  While the EC2 instance running the Diego Brain was offline, the application was unavailable.", 
            "title": "What happened"
        }, 
        {
            "location": "/support/incident_reports/2016-02-11/#contributing-factors", 
            "text": "After conducting a Post Incident Review, we have determined the two direct contributing factors were:   A single point of failure introduced during the setup of the platform, due to time pressures on delivery. We needed to get the platform running so the application could be hosted, and we missed the HA step.  EC2 instances fail periodically, without warning. This is part of the Amazon design, and the platform is designed and built to recover when these failures happen.", 
            "title": "Contributing factors"
        }, 
        {
            "location": "/support/incident_reports/2016-02-11/#what-were-doing-to-fix-this", 
            "text": "This was the first failure of the platform that we have experienced since it went live on January 22, 2016. We see this platform failure as both an excellent opportunity to learn about how complex systems fail, and how we can improve the reliability and quality of service the Infrastructure   Platforms team provides.   We will remove the single point of failure by increasing the number of Diego Brain instances.  We will audit the currently deployed instances to verify we meet the recommended counts of instance types for a fully Highly Available PCF deployment.  We will make improvements to the logging so we can ascertain exactly what has happened on the underlying EC2 infrastructure, during incidents and post-hoc analysis.  We will make improvements to the monitoring so we more frequently probe the running applications, and detect failures earlier.  We will improve our escalation process to notify engineers more aggressively when failures are detected, and provide a mechanism for people to contact us for undetected failures.", 
            "title": "What we're doing to fix this"
        }, 
        {
            "location": "/support/incident_reports/2016-02-11/#conclusion", 
            "text": "All of us on the Infrastructure   Platforms team would like to apologize for the impact of this outage. We will continue to analyze the events leading up to this incident and the steps we took to restore service. This work will guide us as we improve the systems and processes that power the DTO Platform.  If you have any questions, please don't hesitate to contact the cloud.gov.au team at support@cloud.gov.au.", 
            "title": "Conclusion"
        }
    ]
}